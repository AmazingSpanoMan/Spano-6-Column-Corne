/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    macros {
        DblCTRL: DblCTRL {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_CONTROL &kp LEFT_CONTROL>;
            label = "DBLCTRL";
        };
    };

    behaviors {
        Hold_Tap: Hold_Tap {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_TAP";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            hold-trigger-on-release;
            hold-trigger-key-positions = <13 14 15 20 21 22>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            display-name = "Base";
            bindings = <
&kp ESCAPE  &kp Q                   &kp W                 &kp E                     &kp R  &kp T    &kp Y          &kp U      &kp I                      &kp O                  &kp P                            &kp DELETE
&kp TAB     &Hold_Tap LEFT_SHIFT A  &Hold_Tap LEFT_ALT S  &Hold_Tap LEFT_CONTROL D  &kp F  &kp G    &kp H          &kp J      &Hold_Tap RIGHT_CONTROL K  &Hold_Tap RIGHT_ALT L  &Hold_Tap RIGHT_SHIFT SEMICOLON  &kp MINUS
&kp SLASH   &kp Z                   &kp X                 &kp C                     &kp V  &kp B    &kp N          &kp M      &kp COMMA                  &kp DOT                &kp RETURN                       &kp UNDERSCORE
                                                          &kp LEFT_GUI              &mo 1  &mo 2    &kp BACKSPACE  &kp SPACE  &kp SQT
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            display-name = "Lower";
            bindings = <
&kp ESCAPE  &kp N1          &kp N2        &kp N3        &kp N4        &kp N5          &kp N6    &kp N7          &kp N8          &kp N9           &kp N0           &trans
&kp TAB     &kp LEFT_SHIFT  &trans        &trans        &trans        &trans          &trans    &trans          &kp UP          &trans           &kp RIGHT_SHIFT  &trans
&bt BT_CLR  &bt BT_SEL 0    &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &trans    &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &kp RETURN       &trans
                                          &kp LGUI      &trans        &kp SPACE       &DblCTRL  &trans          &trans
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            display-name = "Raise";
            bindings = <
&kp TAB  &kp TAB  &trans  &trans    &trans  &trans    &trans     &trans     &kp SLASH  &kp BACKSLASH  &kp MINUS  &trans
&trans   &trans   &trans  &trans    &trans  &trans    &kp MINUS  &kp EQUAL  &kp LBKT   &kp RBKT       &kp PLUS   &trans
&to 3    &to 4    &trans  &trans    &trans  &trans    &kp UNDER  &kp PLUS   &kp LBRC   &kp RBRC       &trans     &trans
                          &kp LGUI  &trans  &trans    &kp RET    &kp SPACE  &kp RALT
            >;
        };

        Creative {
            display-name = "Art";
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &to 0
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };

        WoW {
            display-name = "WoW";
            bindings = <
&kp LC(NUMBER_6)  &kp LC(NUMBER_7)  &kp LC(NUMBER_3)  &kp NUMBER_3  &kp LC(NUMBER_4)  &kp LC(NUMBER_5)    &kp ESCAPE  &trans  &trans  &trans  &trans  &to 0
&kp NUMBER_1      &kp NUMBER_2      &kp NUMBER_3      &kp W         &kp NUMBER_4      &kp NUMBER_5        &trans      &trans  &trans  &trans  &trans  &trans
&kp NUMBER_6      &kp NUMBER_7      &kp A             &kp S         &kp D             &kp NUMBER_9        &trans      &trans  &trans  &trans  &trans  &trans
                                                      &kp LC(G)     &kp NUMBER_0      &kp SPACE           &trans      &kp M   &kp B
            >;
        };
    };
};
